div#container.ltr
  form#form1.wufoo.topLabel.page(name="form1" accept-charset="UTF-8" autocomplete="off" enctype="multipart/form-data" method="post" action="https://ironyard.wufoo.com/forms/z5pjhog1vxzm32/#public")
    header#header.info
      h3 Apply Today!    
    ul.no-style-type(style="background-color:#e3e7e9; max-width:310px; padding: 20px 0px 1px")
      li#foli1.notranslate
        label.desc#title1(for="Field1") Name
        div
          input#Field1.field.text.medium(name="Field1" type="text" value="" maxlength="255" tabindex="1" onkeyup="")
      li#foli2.notranslate
        label.desc#title2(for="Field2") Email
        div
          input#Field2.field.text.medium(name="Field2" type="email" spellcheck="false" value="" maxlength="255" tabindex="2")
      li#foli3.phone.notranslate
        label.desc#title3(for="Field3") Phone Number
        span
          input#Field3.field.text(name="Field3" type="tel" value="" size="3" maxlength="3" tabindex="3")
        span.symbol  -
        span
          input#Field3-1.field.text(name="Field3-1" type="tel" value="" size="3" maxlength="3" tabindex="3")
        span.symbol  -
        span
          input#Field3-2.field.text(name="Field3-2" type="tel" value="" size="4" maxlength="4" tabindex="5")
      li#foli4.notranslate
        label.desc#title4(for="Field4") Select a Choice
        div
          select#Field4.field.select.medium(name="Field4" tabindex="6")
            option(value="test 1" selected="selected") test 1
            option(value="test 2") test 2
            option(value="test 3") test 3
            option(value="test 4") test 4
      li.buttons
        div
          input#saveForm.btText.submit.btn.section-headline(name="saveForm" type="submit" value="Submit" style="display: block; margin: 0px auto 20px; border:0px; width:155px; font-weight:200;")
      //- li.hide
      //-   label(for="comment") Do Not Fill This Out
      //-   textarea#comment(name="comment" rows="1" cols="1")
      //-   input#idstamp(type="hidden" name="idstamp" value="9uWNIGksziQ5vEZw613OnPYgl+xNkYBb7wMLR3K6uxE=")

script
  :js
    addEvent(window, 'load', initForm);
    
    var highlight_array = new Array();
    
    function initForm(){
      initializeFocus();
      var activeForm = document.getElementsByTagName('form')[0];
      addEvent(activeForm, 'submit', disableSubmitButton);
      ifInstructs();
      showRangeCounters();
    }
    
    function disableSubmitButton() {
      document.getElementById('saveForm').disabled = true;
    }
    
    // for radio and checkboxes, they have to be cleared manually, so they are added to the
    // global array highlight_array so we dont have to loop through the dom every time.
    function initializeFocus(){
      var fields = getElementsByClassName(document, "*", "field");
      
      for(i = 0; i < fields.length; i++) {
        if(fields[i].type == 'radio' || fields[i].type == 'checkbox') {
          fields[i].onclick = function() {highlight(this, 4);};
          fields[i].onfocus = function() {highlight(this, 4);};
        }
        else if(fields[i].className.match('addr') || fields[i].className.match('other')) {
          fields[i].onfocus = function(){highlight(this, 3);};
        }
        else {
          fields[i].onfocus = function(){highlight(this, 2); };
        }
      }
    }
    
    function highlight(el, depth){
      if(depth == 2){var fieldContainer = el.parentNode.parentNode;}
      if(depth == 3){var fieldContainer = el.parentNode.parentNode.parentNode;}
      if(depth == 4){var fieldContainer = el.parentNode.parentNode.parentNode.parentNode;}
      if(depth == 5){var fieldContainer = el.parentNode.parentNode.parentNode.parentNode.parentNode;}
      
      addClassName(fieldContainer, 'focused', true);
      var focusedFields = getElementsByClassName(document, "*", "focused");
      
      for(i = 0; i < focusedFields.length; i++) {
        if(focusedFields[i] != fieldContainer){
          removeClassName(focusedFields[i], 'focused');
        }
      }
    }
    
    function ifInstructs(){
      var container = document.getElementById('public');
      if(container){
        removeClassName(container,'noI');
        var instructs = getElementsByClassName(document,"*","instruct");
        if(instructs == ''){
          addClassName(container,'noI',true);
        }
        if(container.offsetWidth <= 450){
          addClassName(container,'altInstruct',true);
        }
      }
    }
    
    function showRangeCounters(){
      counters = getElementsByClassName(document, "em", "currently");
      for(i = 0; i < counters.length; i++) {
        counters[i].style.display = 'inline';
      }
    }
    
    function validateRange(ColumnId, RangeType) {
      if(document.getElementById('rangeUsedMsg'+ColumnId)) {
        var field = document.getElementById('Field'+ColumnId);
        var msg = document.getElementById('rangeUsedMsg'+ColumnId);
    
        switch(RangeType) {
          case 'character':
            msg.innerHTML = field.value.length;
            break;
            
          case 'word':
            var val = field.value;
            val = val.replace(/\n/g, " ");
            var words = val.split(" ");
            var used = 0;
            for(i =0; i < words.length; i++) {
              if(words[i].replace(/\s+$/,"") != "") used++;
            }
            msg.innerHTML = used;
            break;
            
          case 'digit':
            msg.innerHTML = field.value.length;
            break;
        }
      }
    }
    
    /*--------------------------------------------------------------------------*/
    
    //http://www.robertnyman.com/2005/11/07/the-ultimate-getelementsbyclassname/
    function getElementsByClassName(oElm, strTagName, strClassName){
      var arrElements = (strTagName == "*" && oElm.all)? oElm.all : oElm.getElementsByTagName(strTagName);
      var arrReturnElements = new Array();
      strClassName = strClassName.replace(/\-/g, "\\-");
      var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
      var oElement;
      for(var i=0; i<arrElements.length; i++){
        oElement = arrElements[i];    
        if(oRegExp.test(oElement.className)){
          arrReturnElements.push(oElement);
        } 
      }
      return (arrReturnElements)
    }
    
    //http://www.bigbold.com/snippets/posts/show/2630
    function addClassName(objElement, strClass, blnMayAlreadyExist){
       if ( objElement.className ){
          var arrList = objElement.className.split(' ');
          if ( blnMayAlreadyExist ){
             var strClassUpper = strClass.toUpperCase();
             for ( var i = 0; i < arrList.length; i++ ){
                if ( arrList[i].toUpperCase() == strClassUpper ){
                   arrList.splice(i, 1);
                   i--;
                 }
               }
          }
          arrList[arrList.length] = strClass;
          objElement.className = arrList.join(' ');
       }
       else{  
          objElement.className = strClass;
          }
    }
    
    //http://www.bigbold.com/snippets/posts/show/2630
    function removeClassName(objElement, strClass){
       if ( objElement.className ){
          var arrList = objElement.className.split(' ');
          var strClassUpper = strClass.toUpperCase();
          for ( var i = 0; i < arrList.length; i++ ){
             if ( arrList[i].toUpperCase() == strClassUpper ){
                arrList.splice(i, 1);
                i--;
             }
          }
          objElement.className = arrList.join(' ');
       }
    }
    
    //http://ejohn.org/projects/flexible-javascript-events/
    function addEvent( obj, type, fn ) {
      if ( obj.attachEvent ) {
        obj["e"+type+fn] = fn;
        obj[type+fn] = function() { obj["e"+type+fn]( window.event ) };
        obj.attachEvent( "on"+type, obj[type+fn] );
      } 
      else{
        obj.addEventListener( type, fn, false );  
      }
    } 